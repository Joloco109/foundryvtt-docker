---
version: "3.8"

services:
  foundry:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.foundry.rule=Host(`foundry.nerdnet.ovh`)"
      - "traefik.http.routers.foundry.entrypoints=websecure"
      - "traefik.http.routers.foundry.tls.certresolver=tlschallenge"
      - "traefik.http.routers.foundry.tls.domains[0].main=foundry.nerdnet.ovh"
      - "traefik.http.routers.foundry.middlewares=secHeaders@file"
      - "traefik.http.services.foundry.loadbalancer.server.port=30000"
    image: felddy/foundryvtt:release
    # init: true
    deploy:
      restart_policy:
        max_attempts: 5
        window: 30s
      resources:
        limits:
          cpus: '3.5'
          memory: '12G'
          # pids: 1024
    volumes:
      - type: volume
        source: data
        target: /data
    environment:
      - CONTAINER_CACHE=/data/container_cache
      # - CONTAINER_PATCHES=/data/container_patches
      # - CONTAINER_PATCH_URLS=
      #   https://raw.githubusercontent.com/felddy/...
      #   https://raw.githubusercontent.com/felddy/...
      # - CONTAINER_PRESERVE_CONFIG=false
      # - CONTAINER_URL_FETCH_RETRY=0
      # - CONTAINER_VERBOSE=true
      # - FOUNDRY_AWS_CONFIG=
      # - |
      #   FOUNDRY_DEMO_CONFIG={
      #   "worldName": "demo-world",
      #   "sourceZip": "/data/demo-world.zip",
      #   "resetSeconds": 3600
      #   }
      # - FOUNDRY_GID=foundry
      - FOUNDRY_HOSTNAME=foundry.nerdnet.ovh
      - FOUNDRY_IP_DISCOVERY=false
      # - FOUNDRY_LANGUAGE=
      # - FOUNDRY_LOCAL_HOSTNAME=
      # - FOUNDRY_LICENSE_KEY=
      - FOUNDRY_MINIFY_STATIC_FILES=true
      # - FOUNDRY_PASSWORD_SALT=
      # - FOUNDRY_PROTOCOL=
      # - FOUNDRY_PROXY_PORT=
      - FOUNDRY_PROXY_SSL=true
      # - FOUNDRY_RELEASE_URL=
      # - FOUNDRY_ROUTE_PREFIX=
      # - FOUNDRY_SSL_CERT=
      # - FOUNDRY_SSL_KEY=
      # - FOUNDRY_UID=foundry
      # - FOUNDRY_UPNP=false
      # - FOUNDRY_UPNP_LEASE_DURATION=
      # - FOUNDRY_VERSION=10.291
      # - FOUNDRY_WORLD=
      # - TIMEZONE=US/Eastern
    secrets:
      - source: config_json
        target: config.json
    networks:
      - traefik-servicenet

secrets:
  config_json:
    file: "./.secrets/config.json"

volumes:
  data:

networks:
  traefik-servicenet:
    external: true             # this network has to be created once before starting:
    name: traefik-servicenet    # docker network create traefik-servicenet
